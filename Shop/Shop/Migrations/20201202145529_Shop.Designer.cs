// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Shop.Data;

namespace Shop.Migrations
{
    [DbContext(typeof(ShopContext))]
    [Migration("20201202145529_Shop")]
    partial class Shop
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Shop.Models.Products.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CartID")
                        .HasColumnType("int");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(5,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("ID");

                    b.HasIndex("CartID");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Shop.Models.User.BankAccount", b =>
                {
                    b.Property<string>("BankAccountNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("BankAccountBalance")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("BankAccountNumber");

                    b.ToTable("BankAccounts");
                });

            modelBuilder.Entity("Shop.Models.User.Cart", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("FinalPrice")
                        .HasColumnType("decimal(6,2)");

                    b.HasKey("ID");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("Shop.Models.User.User", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Address")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("BankAccountNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("CartID")
                        .HasColumnType("int");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Password")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Role")
                        .HasColumnType("varchar(10)");

                    b.HasKey("Username");

                    b.HasIndex("BankAccountNumber");

                    b.HasIndex("CartID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Shop.Models.Products.Product", b =>
                {
                    b.HasOne("Shop.Models.User.Cart", null)
                        .WithMany("Products")
                        .HasForeignKey("CartID");
                });

            modelBuilder.Entity("Shop.Models.User.User", b =>
                {
                    b.HasOne("Shop.Models.User.BankAccount", "BankAccount")
                        .WithMany()
                        .HasForeignKey("BankAccountNumber");

                    b.HasOne("Shop.Models.User.Cart", "Cart")
                        .WithMany()
                        .HasForeignKey("CartID");

                    b.Navigation("BankAccount");

                    b.Navigation("Cart");
                });

            modelBuilder.Entity("Shop.Models.User.Cart", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
