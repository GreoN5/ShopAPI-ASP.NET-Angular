{"version":3,"sources":["./src/app/user/login/login.component.ts","./src/app/user/login/login.component.html","./src/app/shared/admin.service.ts","./src/app/shop/header/header.component.ts","./src/app/shop/header/header.component.html","./src/app/user/user.component.ts","./src/app/user/user.component.html","./src/environments/environment.ts","./src/app/shared/user.service.ts","./src/app/shop/products-by-categories/products-by-categories.component.ts","./src/app/shop/products-by-categories/products-by-categories.component.html","./src/app/shop/admin/admin.component.ts","./src/app/shop/admin/admin.component.html","./src/app/auth/auth.guard.ts","./src/app/user/registration/registration.component.ts","./src/app/user/registration/registration.component.html","./src/app/shop/admin/create-product/create-product.component.ts","./src/app/shop/admin/create-product/create-product.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/shop/admin/show-remove-user/show-remove-user.component.ts","./src/app/shop/admin/show-remove-user/show-remove-user.component.html","./src/app/shared/shop.service.ts","./src/app/app.module.ts","./src/app/shop/shop.component.ts","./src/app/shop/shop.component.html","./src/app/shop/admin/edit-product/edit-product.component.ts","./src/app/shop/admin/edit-product/edit-product.component.html","(webpack)/hot sync nonrecursive ^\\.\\/log$","./src/app/user/cart/cart.component.ts","./src/app/user/cart/cart.component.html","./src/app/shop/admin/add-user/add-user.component.ts","./src/app/shop/admin/add-user/add-user.component.html","./src/app/shop/admin/nav-bar/nav-bar.component.ts","./src/app/shop/admin/nav-bar/nav-bar.component.html","./src/app/shop/admin/add-admin/add-admin.component.ts","./src/app/shop/admin/add-admin/add-admin.component.html","./src/app/shop/admin/show-remove-admin/show-remove-admin.component.ts","./src/app/shop/admin/show-remove-admin/show-remove-admin.component.html","./src/app/shop/admin/show-remove-product/show-remove-product.component.ts","./src/app/shop/admin/show-remove-product/show-remove-product.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserService } from 'src/app/shared/user.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginModel = {\n    Username: '',\n    Password: ''\n  }\n\n  constructor(public userService: UserService, private router: Router) { }\n\n  ngOnInit(): void {\n    if (localStorage.getItem('token') !== null) {\n      this.router.navigateByUrl('/home')\n    }\n  }\n\n  submit(loginForm: NgForm) {\n    this.userService.login(loginForm.value).subscribe(\n      (response: any) => {\n        localStorage.setItem('loggedUser', loginForm.value.Username)\n        localStorage.setItem('token', response.authToken)\n        localStorage.setItem('role', response.role)\n\n        if (response.role === 'Admin') {\n          this.router.navigateByUrl('/admin')\n        } else {\n          this.router.navigateByUrl('/home')\n        }\n\n      }, error => {\n        console.log(error)\n      }\n    )\n  }\n}\n","<app-header></app-header>\n<main>\n    <div class=\"login-container\">\n        <div class=\"form-wrapper\">\n            <form #loginForm=\"ngForm\" autocomplete=\"off\" (submit)=\"submit(loginForm)\">\n                <label id=\"username-label\">Username: </label>\n                <div class=\"text-box-center\">\n                    <input #Username=\"ngModel\" name=\"Username\" [(ngModel)]=\"loginModel.Username\" \n                    id=\"text-box\" placeholder=\"Enter username\" required />\n                </div>\n                <label id=\"password-label\">Password: </label>\n                <div class=\"text-box-center\">\n                    <input #Password=\"ngModel\" type=\"password\" name=\"Password\" [(ngModel)]=\"loginModel.Password\"\n                    id=\"text-box\" placeholder=\"Enter password\" required />\n                </div>\n                <div>\n                    <button id=\"login-button\" type=\"submit\" [disabled]=\"loginForm.invalid\">Login</button>\n                </div>\n            </form>\n            <div>\n                <h4 id=\"sign-up-link\" routerLink=\"/user/registration\" routerLinkActive=\"active\">Don't have an account? Sign up here!</h4>\n            </div>\n        </div>\n    </div>\n</main>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminService {\n\n  readonly ApiURL = 'https://localhost:44369' //URL to the server\n\n  constructor(private http: HttpClient, private fb: FormBuilder) { }\n\n  createModelUser = this.fb.group({\n    Username: new FormControl('', [Validators.required]),\n    Passwords: this.fb.group({\n      Password: new FormControl('', [Validators.required, Validators.pattern('^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9]).{6,}$')]),\n      ConfirmPassword: new FormControl('', [Validators.required])\n    }, {\n      validators: this.comparePasswords\n    }),\n    EmailAddress: new FormControl('', [Validators.required, Validators.pattern(/\\S+@\\S+\\.\\S+/)]),\n    Address: new FormControl(''),\n    PhoneNumber: new FormControl('', [Validators.required, Validators.maxLength(10), Validators.minLength(10)]),\n    BankAccountNumber: new FormControl('', [Validators.required, Validators.pattern('(^BG)([0-9]{2})([A-Z]{4})([0-9]{14}$)')])\n  })\n\n  createModelProduct = this.fb.group({\n    Name: new FormControl('', [Validators.required]),\n    Description: new FormControl(''),\n    Price: new FormControl('', [Validators.required]),\n    Quantity: new FormControl('', [Validators.required]),\n    Category: new FormControl('', [Validators.required])\n  })\n\n  createModelAdmin = this.fb.group({\n    Username: new FormControl('', [Validators.required]),\n    Passwords: this.fb.group({\n      Password: new FormControl('', [Validators.required, Validators.pattern('^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9]).{6,}$')]),\n      ConfirmPassword: new FormControl('', [Validators.required])\n    }, {\n      validators: this.comparePasswords\n    })\n  })\n\n  comparePasswords(fg: FormGroup) {\n    let confirmedPassword = fg.get('ConfirmPassword')\n\n    if (confirmedPassword.errors === null || 'passwordMismatch' in confirmedPassword.errors) {\n      if (fg.get('Password').value != confirmedPassword.value) {\n        confirmedPassword.setErrors({ passwordMismatch: true })\n      } else {\n        confirmedPassword.setErrors(null)\n      }\n    }\n  }\n\n  registeredUsers = []\n  allProducts = []\n  productCategories = []\n  admins = []\n\n  getAllRegisteredUsers(): any {\n    return this.http.get(this.ApiURL + '/Admin/Users')\n  }\n\n  getAllAdmins(): any {\n    return this.http.get(this.ApiURL + '/Admin/Admins')\n  }\n\n  getAllProducts(): any {\n    return this.http.get(this.ApiURL + '/Admin/Products')\n  }\n\n  getAllProductCategories(): any {\n    return this.http.get(this.ApiURL + '/Admin/ProductCategories')\n  }\n\n  createNewProduct() {\n    let newProduct = {\n      Name: this.createModelProduct.value.Name,\n      Description: this.createModelProduct.value.Description,\n      Price: this.createModelProduct.value.Price,\n      Quantity: this.createModelProduct.value.Quantity,\n      Category: this.createModelProduct.value.Category\n    }\n\n    return this.http.post(this.ApiURL + '/Admin/CreateProduct', newProduct)\n  }\n\n  addNewUser() {\n    let newUser = {\n      Username: this.createModelUser.value.Username,\n      Password: this.createModelUser.value.Passwords.Password,\n      EmailAddress: this.createModelUser.value.EmailAddress,\n      Address: this.createModelUser.value.Address,\n      PhoneNumber: this.createModelUser.value.PhoneNumber,\n      BankAccountNumber: this.createModelUser.value.BankAccountNumber\n    }\n\n    return this.http.post(this.ApiURL + '/Admin/AddNewUser', newUser)\n  }\n\n  addNewAdmin() {\n    let newAdmin = {\n      Username: this.createModelAdmin.value.Username,\n      Password: this.createModelAdmin.value.Password\n    }\n\n    return this.http.post(this.ApiURL + '/Admin/AddNewAdmin', newAdmin)\n  }\n\n  editProduct(productID) {\n    return this.http.put(this.ApiURL + '/Admin/EditProduct/' + productID, productID)\n  }\n\n  removeProduct(productName: string) {\n    return this.http.delete(this.ApiURL + '/Admin/RemoveProduct/' + productName)\n  }\n\n  removeUser(username: string) {\n    return this.http.delete(this.ApiURL + '/Admin/RemoveUser/' + username)\n  }\n\n  removeAdmin(username: string) {\n    return this.http.delete(this.ApiURL + '/Admin/RemoveAdmin/' + username)\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ShopService } from 'src/app/shared/shop.service';\nimport { UserService } from 'src/app/shared/user.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(public shopService: ShopService, public userService: UserService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.showCategories()\n  }\n\n  showCategories() {\n    this.shopService.getCategories().subscribe(\n      data => {\n        this.shopService.productCategories = data\n      }, error => {\n        console.log(error)\n      }\n    )\n  }\n\n  navigateToCategory(category) {\n    this.router.navigateByUrl('/home/' + category)\n  }\n\n  getLoggedUser() {\n    return localStorage.getItem('loggedUser')\n  }\n\n  isLoggedUser() {\n    let user = this.getLoggedUser()\n\n    if (user === null) {\n      return false\n    }\n\n    return true\n  }\n\n  logout() {\n    localStorage.clear();\n    this.router.navigateByUrl('/home')\n  }\n}\n","<header>\n  <div>\n    <a href=\"/home\"><img class=\"logo\" src=\"assets/images/shop-logo-transperant-resized.png\"/></a>\n  </div>\n  <div class=\"nav-bar\">\n    <ul *ngFor=\"let data of shopService.productCategories\">\n      <li (click)=\"navigateToCategory(data)\">{{data}}</li>\n    </ul>\n  </div>\n  <div class=\"user-profile\">\n    <ul *ngIf=\"!isLoggedUser()\">\n      <li routerLink=\"/user/login\" routerLinkActive=\"active\">Login</li>\n      <li routerLink=\"/user/registration\" routerLinkActive=\"active\">Sign up</li>\n    </ul>\n    <ul *ngIf=\"isLoggedUser()\">\n      <li routerLink=\"/user/cart\" routerLinkActive=\"active\">My cart</li>\n      <li (click)=\"logout()\">Logout</li>\n    </ul>\n  </div>\n</header>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-header></app-header>\n<app-login></app-login>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http: HttpClient, private fb: FormBuilder) { }\n\n  readonly ApiURL = 'https://localhost:44369'\n\n  registerModel = this.fb.group({\n    Username: new FormControl('', [Validators.required]),\n    Passwords: this.fb.group({\n      Password: new FormControl('', [Validators.required, Validators.pattern('^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9]).{6,}$')]),\n      ConfirmPassword: new FormControl('', [Validators.required])\n    }, {\n      validators: this.comparePasswords\n    }),\n    EmailAddress: new FormControl('', [Validators.required, Validators.pattern(/\\S+@\\S+\\.\\S+/)]),\n    Address: new FormControl(''),\n    PhoneNumber: new FormControl('', [Validators.required, Validators.maxLength(10), Validators.minLength(10)]),\n    BankAccountNumber: new FormControl('', [Validators.required, Validators.pattern('(^BG)([0-9]{2})([A-Z]{4})([0-9]{14}$)')])\n  })\n\n  comparePasswords(fg: FormGroup) {\n    let confirmedPassword = fg.get('ConfirmPassword')\n\n    if (confirmedPassword.errors === null || 'passwordMismatch' in confirmedPassword.errors) {\n      if (fg.get('Password').value != confirmedPassword.value) {\n        confirmedPassword.setErrors({ passwordMismatch: true })\n      } else {\n        confirmedPassword.setErrors(null)\n      }\n    }\n  }\n\n  register() {\n    let registrationUser = {\n      Username: this.registerModel.value.Username,\n      Password: this.registerModel.value.Passwords.Password,\n      EmailAddress: this.registerModel.value.EmailAddress,\n      Address: this.registerModel.value.Address,\n      PhoneNumber: this.registerModel.value.PhoneNumber,\n      BankAccountNumber: this.registerModel.value.BankAccountNumber\n    }\n\n    return this.http.post(this.ApiURL + '/User/Registration', registrationUser)\n  }\n\n  login(data) {\n    return this.http.post(this.ApiURL + '/User/Login', data)\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { ShopService } from 'src/app/shared/shop.service';\n\n@Component({\n  selector: 'app-products-by-categories',\n  templateUrl: './products-by-categories.component.html',\n  styleUrls: ['./products-by-categories.component.css']\n})\nexport class ProductsByCategoriesComponent implements OnInit {\n\n  constructor(public shopService: ShopService, private router: ActivatedRoute) { }\n\n  categoryParameter;\n\n  ngOnInit(): void {\n    this.router.paramMap.subscribe(paramMap => {\n      this.categoryParameter = paramMap.get('category')\n      this.showProductsByCategory(this.categoryParameter)\n    })\n  }\n\n  showProductsByCategory(category) {\n    this.shopService.getProductsByCategories(category).subscribe(\n      data => {\n        this.shopService.productsByCategories = data\n      }, error => {\n        console.log(error)\n      }\n    )\n  }\n}\n","<app-header></app-header>\n<main>\n  <div class=\"products-container\">\n    <div class=\"product\">\n      <div class=\"product-details\" *ngFor=\"let data of shopService.productsByCategories\">\n        <div class=\"product-name\">{{data.name}}</div>\n        <div class=\"product-image\"></div>\n        <div class=\"product-price\">Price: {{data.price}}</div>\n        <div class=\"product-status\">Status: {{data.status}}</div>\n        <div class=\"product-actions\">\n          <input type=\"button\" value=\"Details\" />\n          <input type=\"button\" value=\"Add to cart\" />\n        </div>\n      </div>\n    </div>\n  </div>\n</main>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-nav-bar></app-nav-bar>\n<router-outlet></router-outlet>\n<h1>Welcome</h1>\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private router: Router) { }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    if (localStorage.getItem('token') !== null) {\n      return true\n    } else {\n      this.router.navigateByUrl('/home')\n      return false\n    }\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from 'src/app/shared/user.service';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit {\n\n  constructor(public userService: UserService, private router: Router) { }\n\n  usernameInUseMsg: boolean\n  emailInUseMsg: boolean\n  bankAccountNumberInUseMsg: boolean\n  registrationSuccess: boolean\n\n  ngOnInit(): void {\n    this.userService.registerModel.reset()\n  }\n\n  submit() {\n    this.userService.register().subscribe(\n      (response: any) => {\n        this.registrationSuccess = true\n        this.userService.registerModel.reset()\n      }, error => {\n        localStorage.setItem('error', error)\n        console.log(error)\n\n        if (error.status === 409) {\n          this.usernameInUseMsg = true\n        } else if (error.status === 410) {\n          this.emailInUseMsg = true\n        } else if (error.status === 411) {\n          this.bankAccountNumberInUseMsg = true\n        }\n      })\n  }\n}\n","<app-header id=\"back-to-top\"></app-header>\n<div class=\"duplicated-username\" *ngIf=\"usernameInUseMsg\">\n    <p>Username already exists! Try another one.</p>\n</div>\n<div class=\"duplicated-email\" *ngIf=\"emailInUseMsg\">\n    <p>Email already exists! Try another one.</p>\n</div>\n<div class=\"duplicated-bank-account-number\" *ngIf=\"bankAccountNumberInUseMsg\">\n    <p>Bank account number already exists! Try another one.</p>\n</div>\n<div class=\"registration-success\" *ngIf=\"registrationSuccess\">\n    <p>\n        You are successfully registered! \n        <a id=\"login-link\" routerLink=\"/user/login\" routerLinkActive=\"active\">Click here to login.</a>\n    </p>\n</div>\n<main>\n    <div class=\"register-container\">\n        <div class=\"form-wrapper\">\n            <form [formGroup]=\"userService.registerModel\" autocomplete=\"off\" (ngSubmit)=\"submit()\">\n                <label class=\"required\"></label>\n                <label id=\"username-label\">Username: </label>\n                <label *ngIf=\"userService.registerModel.get('Username').touched &&\n                    userService.registerModel.get('Username').errors?.required\">This field is required!</label>\n                <div class=\"text-box-center\">\n                    <input id=\"text-box\" type=\"text\" formControlName=\"Username\" placeholder=\"Enter username\" />\n                </div>\n                <div formGroupName=\"Passwords\">\n                    <label id=\"password-label\">Password: </label>\n                    <label class=\"required\"></label>\n                    <label *ngIf=\"userService.registerModel.get('Passwords.Password').touched && \n                        userService.registerModel.get('Passwords.Password').errors?.required\">This field is required!</label>\n                    <label *ngIf=\"userService.registerModel.get('Passwords.Password').touched &&\n                        userService.registerModel.get('Passwords.Password').hasError('pattern')\">\n                        Password should contain at least 6 symbols including lowercase and uppercase characters without space!</label>\n                    <div class=\"text-box-center\">\n                        <input id=\"text-box\" type=\"password\" formControlName=\"Password\" placeholder=\"Enter password\" />\n                    </div>\n                    <label id=\"confirm-password-label\">Confirm password: </label>\n                    <label class=\"required\"></label>\n                    <label *ngIf=\"userService.registerModel.get('Passwords.ConfirmPassword').touched &&\n                        userService.registerModel.get('Passwords.ConfirmPassword').errors?.required\">\n                        This field is required!</label>\n                    <label *ngIf=\"userService.registerModel.get('Passwords.ConfirmPassword').touched &&\n                        userService.registerModel.get('Passwords.ConfirmPassword').errors?.passwordMismatch\">\n                        Passwords does not match!</label>\n                    <div class=\"text-box-center\">\n                        <input id=\"text-box\" type=\"password\" formControlName=\"ConfirmPassword\" placeholder=\"Confirm password\" />\n                    </div>\n                </div>\n                <label id=\"email-address-label\">Email address: </label>\n                <label class=\"required\"></label>\n                <label *ngIf=\"userService.registerModel.get('EmailAddress').touched &&\n                    userService.registerModel.get('EmailAddress').errors?.required\">This field is required!</label>\n                <label *ngIf=\"userService.registerModel.get('EmailAddress').touched &&\n                    userService.registerModel.get('EmailAddress').hasError('patern')\">Invalid Email address!</label>\n                <div class=\"text-box-center\">\n                    <input id=\"text-box\" type=\"email\" formControlName=\"EmailAddress\" placeholder=\"Enter your email address\" />\n                </div>\n                <label id=\"address\">Address: </label>\n                <div class=\"text-box-center\">\n                    <input id=\"text-box\" type=\"text\" formControlName=\"Address\" placeholder=\"Enter your address\" />\n                </div>\n                <label id=\"phone-number\">Phone number: </label>\n                <label class=\"required\"></label>\n                <label *ngIf=\"userService.registerModel.get('PhoneNumber').touched &&\n                    userService.registerModel.get('PhoneNumber').errors?.required\">This field is required!</label>\n                <label *ngIf=\"userService.registerModel.get('PhoneNumber').touched &&\n                    userService.registerModel.get('PhoneNumber').hasError('maxlength') &&\n                    userService.registerModel.get('PhoneNumber').hasError('minlength')\">\n                    Phone number should consists of 10 digits</label>\n                <div class=\"text-box-center\">\n                    <input id=\"text-box\" type=\"text\" formControlName=\"PhoneNumber\" placeholder=\"Enter your phone number\" />\n                </div>\n                <label id=\"bank-account-number\">Bank account number: </label>\n                <label class=\"required\"></label>\n                <label *ngIf=\"userService.registerModel.get('BankAccountNumber').touched &&\n                    userService.registerModel.get('BankAccountNumber').errors?.required\">This field is required!</label>\n                <label *ngIf=\"userService.registerModel.get('BankAccountNumber').touched &&\n                    userService.registerModel.get('BankAccountNumber').hasError('pattern')\">Invalid bank account number!</label>\n                <div class=\"text-box-center\">\n                    <input id=\"text-box\" type=\"text\" formControlName=\"BankAccountNumber\" placeholder=\"Enter you bank account number\" />\n                </div>\n                <div>\n                    <button id=\"sign-up-button\" type=\"submit\" [disabled]=\"userService.registerModel.invalid\" \n                    onClick=\"document.getElementById('back-to-top').scrollIntoView();\">Sign up</button>\n                </div>\n            </form>\n            <div>\n                <h4 id=\"sign-in-link\" routerLink=\"/user/login\" routerLinkActive=\"active\">Already have an account? Sign in here!</h4>\n            </div>\n        </div>\n    </div>\n</main>\n","import { Component, OnInit } from '@angular/core';\nimport { AdminService } from 'src/app/shared/admin.service';\n\n@Component({\n  selector: 'app-create-product',\n  templateUrl: './create-product.component.html',\n  styleUrls: ['./create-product.component.css']\n})\nexport class CreateProductComponent implements OnInit {\n\n  constructor(public adminService: AdminService) { }\n\n  ngOnInit(): void {\n    this.getProductCategories()\n    this.adminService.createModelProduct.reset()\n  }\n\n  getProductCategories() {\n    this.adminService.getAllProductCategories().subscribe(\n      data => {\n        this.adminService.productCategories = data\n      }, error => {\n        console.log(error)\n      }\n    )\n  }\n\n  submit() {\n    this.adminService.createNewProduct().subscribe(\n      response => {\n        this.adminService.createModelProduct.reset()\n      }, error => {\n        console.log(error)\n      }\n    )\n  }\n\n}\n","<div class=\"product-creation\">\n    <div class=\"form-wrapper\">\n        <form [formGroup]=\"adminService.createModelProduct\" autocomplete=\"off\" (ngSubmit)=\"submit()\">\n            <label class=\"required\"></label>\n            <label id=\"name-label\">Name: </label>\n            <label *ngIf=\"adminService.createModelProduct.get('Name').touched &&\n                adminService.createModelProduct.get('Name').errors?.required\">This field is required!</label>\n            <div class=\"text-box-center\">\n                <input id=\"text-box\" type=\"text\" formControlName=\"Name\" placeholder=\"Enter product name\" />\n            </div>\n            <label id=\"description-label\">Description: </label>\n            <div class=\"text-box-center\">\n                <textarea id=\"product-description\" formControlName=\"Description\" \n                placeholder=\"Type the description of the product here.\"></textarea>\n            </div>\n            <label id=\"product-price\">Price: </label>\n            <label class=\"required\"></label>\n            <label *ngIf=\"adminService.createModelProduct.get('Price').touched &&\n                adminService.createModelProduct.get('Price').errors?.required\">This field is required!</label>\n            <div class=\"text-box-center\">\n                <input id=\"text-box\" type=\"number\" formControlName=\"Price\" placeholder=\"Enter product price\" />\n            </div>\n            <label id=\"product-quantity\">Quantity: </label>\n            <label class=\"required\"></label>\n            <label *ngIf=\"adminService.createModelProduct.get('Quantity').touched &&\n                adminService.createModelProduct.get('Quantity').errors?.required\">This field is required!</label>\n            <div class=\"text-box-center\">\n                <input id=\"text-box\" type=\"number\" formControlName=\"Quantity\" placeholder=\"Enter your phone number\" />\n            </div>\n            <label id=\"product-category\">Category: </label>\n            <label class=\"required\"></label>\n            <label *ngIf=\"adminService.createModelProduct.get('Category').touched &&\n                adminService.createModelProduct.get('Category').errors?.required\">This field is required!</label>\n            <div class=\"text-box-center\">\n                <select id=\"dropdown-category\" formControlName=\"Category\" *ngFor=\"let category of adminService.productCategories\">\n                    <option>{{category}}</option>\n                </select>\n            </div>\n            <div>\n                <button id=\"create-product-button\" type=\"submit\" [disabled]=\"adminService.createModelProduct.invalid\">Create product</button>\n            </div>\n        </form>\n    </div>\n</div>\n\n\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ShopUI';\n}\n","<router-outlet></router-outlet>\n","import { Component, OnInit } from '@angular/core';\nimport { AdminService } from 'src/app/shared/admin.service';\n\n@Component({\n  selector: 'app-show-remove-user',\n  templateUrl: './show-remove-user.component.html',\n  styleUrls: ['./show-remove-user.component.css']\n})\nexport class ShowRemoveUserComponent implements OnInit {\n\n  constructor(public adminService: AdminService) { }\n\n  ngOnInit(): void {\n    this.showUsers()\n  }\n\n  showUsers() {\n    this.adminService.getAllRegisteredUsers().subscribe(\n      data => {\n        this.adminService.registeredUsers = data\n      }, error => {\n        console.log(error)\n      }\n    )\n  }\n\n  deleteUser(username) {\n    this.adminService.removeUser(username).subscribe(\n      data => {\n        for (let i = 0; i < this.adminService.registeredUsers.length; i++) {\n          if (this.adminService.registeredUsers[i].username === username) {\n            this.adminService.registeredUsers.splice(i, 1)\n\n            break;\n          }\n        }\n      }, error => {\n        console.log(error)\n      }\n    )\n  }\n}\n","<header>\n    <h1>Users</h1>\n</header>\n\n<table>\n    <thead>\n        <tr>\n            <th>Username</th>\n            <th>Email address</th>\n            <th>Address</th>\n            <th>Phone number</th>\n            <th>Bank account number</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let user of adminService.registeredUsers\">\n            <td>{{user.username}}</td>\n            <td>{{user.emailAddress}}</td>\n            <td>{{user.address}}</td>\n            <td>{{user.phoneNumber}}</td>\n            <td>{{user.bankAccountNumber}}</td>\n            <td (click)=\"deleteUser(user.username)\">Delete</td>\n        </tr>\n    </tbody>\n</table>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ShopService {\n\n  readonly ApiURL = 'https://localhost:44369' //URL to the server\n\n  constructor(private http: HttpClient) { }\n\n  products = []\n  productCategories = []\n  productsByCategories = []\n  productsInCart = []\n\n  getCategories(): any {\n    return this.http.get(this.ApiURL + '/Shop/ProductCategories')\n  }\n\n  getProducts(): any {\n    return this.http.get(this.ApiURL + '/Shop/Products')\n  }\n\n  getProductsByCategories(category): any {\n    return this.http.get(this.ApiURL + '/Shop/Products/' + category)\n  }\n\n  showCart() {\n    return this.http.get(this.ApiURL + '/Shop/' + this.getLoggedUser() + '/Cart')\n  }\n\n  cartPrice() {\n    return this.http.get(this.ApiURL + '/Shop/' + this.getLoggedUser() + '/Cart/FinalPrice')\n  }\n\n  addProductToCart(productName) {\n    return this.http.post(this.ApiURL + '/Shop/' + this.getLoggedUser() + '/Cart/AddProduct/' + productName, productName)\n  }\n\n  changeQuantityOfProduct(productName) {\n    return this.http.put(this.ApiURL + '/Shop/' + this.getLoggedUser() + '/Cart/' + productName + '/ChangeQuantity', productName)\n  }\n\n  removeProductFromCart(productName) {\n    return this.http.delete(this.ApiURL + '/Shop/' + this.getLoggedUser() + '/Cart/RemoveProduct/' + productName)\n  }\n\n  removeAllProductFromCart() {\n    return this.http.delete(this.ApiURL + '/Shop/' + this.getLoggedUser() + '/Cart')\n  }\n\n  getLoggedUser() {\n    return localStorage.getItem('loggedUser')\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { UserComponent } from './user/user.component';\nimport { RegistrationComponent } from './user/registration/registration.component';\nimport { LoginComponent } from './user/login/login.component';\nimport { ShopComponent } from './shop/shop.component';\nimport { CartComponent } from './user/cart/cart.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HeaderComponent } from './shop/header/header.component';\nimport { ProductsByCategoriesComponent } from './shop/products-by-categories/products-by-categories.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AdminComponent } from './shop/admin/admin.component';\nimport { CreateProductComponent } from './shop/admin/create-product/create-product.component';\nimport { AddUserComponent } from './shop/admin/add-user/add-user.component';\nimport { AddAdminComponent } from './shop/admin/add-admin/add-admin.component';\nimport { ShowRemoveUserComponent } from './shop/admin/show-remove-user/show-remove-user.component';\nimport { ShowRemoveProductComponent } from './shop/admin/show-remove-product/show-remove-product.component';\nimport { EditProductComponent } from './shop/admin/edit-product/edit-product.component';\nimport { NavBarComponent } from './shop/admin/nav-bar/nav-bar.component';\nimport { ShowRemoveAdminComponent } from './shop/admin/show-remove-admin/show-remove-admin.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserComponent,\n    RegistrationComponent,\n    LoginComponent,\n    ShopComponent,\n    CartComponent,\n    HeaderComponent,\n    ProductsByCategoriesComponent,\n    AdminComponent,\n    CreateProductComponent,\n    AddUserComponent,\n    AddAdminComponent,\n    ShowRemoveUserComponent,\n    ShowRemoveProductComponent,\n    EditProductComponent,\n    NavBarComponent,\n    ShowRemoveAdminComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { ShopService } from '../shared/shop.service';\n\n@Component({\n  selector: 'app-shop',\n  templateUrl: './shop.component.html',\n  styleUrls: ['./shop.component.css']\n})\nexport class ShopComponent implements OnInit {\n\n  constructor(public shopService: ShopService, private route: ActivatedRoute) { }\n\n  userRole = localStorage.getItem('role')\n\n  ngOnInit(): void {\n    this.showCategories()\n    this.showProducts()\n  }\n\n  showProducts() {\n    this.shopService.getProducts().subscribe(\n      data => {\n        this.shopService.products = data\n      }, error => {\n        console.log(error)\n      }\n    )\n  }\n\n  showCategories() {\n    this.shopService.getCategories().subscribe(\n      data => {\n        this.shopService.productCategories = data\n      }, error => {\n        console.log(error)\n      }\n    )\n  }\n}\n","<div *ngIf=\"userRole === 'User' || userRole === null\">\n    <app-header></app-header>\n    <router-outlet></router-outlet>\n</div>\n\n<div *ngIf=\"userRole === 'Admin'\">\n    <app-admin></app-admin>\n    <router-outlet></router-outlet>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { AdminService } from 'src/app/shared/admin.service';\n\n@Component({\n  selector: 'app-edit-product',\n  templateUrl: './edit-product.component.html',\n  styleUrls: ['./edit-product.component.css']\n})\nexport class EditProductComponent implements OnInit {\n\n  constructor(private adminService: AdminService, private router: ActivatedRoute, private fb: FormBuilder) { }\n\n  productID;\n  productEdit = this.fb.group({\n    Name: new FormControl('', [Validators.required]),\n    Description: new FormControl(''),\n    Price: new FormControl('', [Validators.required]),\n    Quantity: new FormControl('', [Validators.required])\n  })\n\n  ngOnInit(): void {\n    this.products()\n\n    this.router.paramMap.subscribe(paramMap => {\n      this.productID = paramMap.get('id')\n      this.editedProduct(this.productID)\n    })\n\n    let product = JSON.parse(localStorage.getItem('productEdit'))\n    this.productEdit.patchValue({\n      Name: product.name,\n      Description: product.description,\n      Price: product.price,\n      Quantity: product.quantity\n    })\n  }\n\n  editedProduct(id) {\n    this.adminService.editProduct(id).subscribe(\n      product => {\n        for (let i = 0; i < this.adminService.allProducts.length; i++) {\n          if (this.adminService.allProducts[i].id === id) {\n            localStorage.setItem('productEdit', JSON.stringify(product))\n\n            break;\n          }\n        }\n      }, error => {\n        console.log(error)\n      }\n    )\n  }\n\n  products() {\n    this.adminService.getAllProducts().subscribe(\n      data => {\n        this.adminService.allProducts = data\n      }, error => {\n        console.log(error)\n      }\n    )\n  }\n\n  submitChanges() {\n\n  }\n\n}\n","<div class=\"product-creation\">\n    <div class=\"form-wrapper\">\n        <form [formGroup]=\"productEdit\" autocomplete=\"on\" (ngSubmit)=\"submitChanges()\">\n            <label class=\"required\"></label>\n            <label id=\"name-label\">Name: </label>\n            <label *ngIf=\"productEdit.get('Name').touched &&\n                productEdit.get('Name').errors?.required\">This field is required!</label>\n            <div class=\"text-box-center\">\n                <input id=\"text-box\" type=\"text\" formControlName=\"Name\" placeholder=\"Enter product name\" />\n            </div>\n            <label id=\"description-label\">Description: </label>\n            <div class=\"text-box-center\">\n                <textarea id=\"product-description\" formControlName=\"Description\" \n                placeholder=\"Type the description of the product here.\"></textarea>\n            </div>\n            <label id=\"product-price\">Price: </label>\n            <label class=\"required\"></label>\n            <label *ngIf=\"productEdit.get('Price').touched &&\n                productEdit.get('Price').errors?.required\">This field is required!</label>\n            <div class=\"text-box-center\">\n                <input id=\"text-box\" type=\"number\" formControlName=\"Price\" placeholder=\"Enter product price\" />\n            </div>\n            <label id=\"product-quantity\">Quantity: </label>\n            <label class=\"required\"></label>\n            <label *ngIf=\"productEdit.get('Quantity').touched &&\n                productEdit.get('Quantity').errors?.required\">This field is required!</label>\n            <div class=\"text-box-center\">\n                <input id=\"text-box\" type=\"number\" formControlName=\"Quantity\" placeholder=\"Enter your phone number\" />\n            </div>\n            <div>\n                <button id=\"submit-edit\" type=\"submit\" [disabled]=\"productEdit.invalid\">Create product</button>\n            </div>\n        </form>\n    </div>\n</div>\n\n\n","var map = {\n\t\"./log\": \"dZZH\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"i3Xp\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.css']\n})\nexport class CartComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>cart works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { AdminService } from 'src/app/shared/admin.service';\n\n@Component({\n  selector: 'app-add-user',\n  templateUrl: './add-user.component.html',\n  styleUrls: ['./add-user.component.css']\n})\nexport class AddUserComponent implements OnInit {\n\n  constructor(public adminService: AdminService) { }\n\n  ngOnInit(): void {\n    this.adminService.createModelUser.reset()\n  }\n\n  submit() {\n    this.adminService.addNewUser().subscribe(\n      response => {\n        this.adminService.createModelUser.reset()\n      }, error => {\n        console.log(error)\n      }\n    )\n  }\n\n}\n","<div class=\"user-addition\">\n    <div class=\"form-wrapper\">\n        <form [formGroup]=\"adminService.createModelUser\" autocomplete=\"off\" (ngSubmit)=\"submit()\">\n            <label class=\"required\"></label>\n            <label id=\"username-label\">Username: </label>\n            <label *ngIf=\"adminService.createModelUser.get('Username').touched &&\n                adminService.createModelUser.get('Username').errors?.required\">This field is required!</label>\n            <div class=\"text-box-center\">\n                <input id=\"text-box\" type=\"text\" formControlName=\"Username\" placeholder=\"Enter username\" />\n            </div>\n            <div formGroupName=\"Passwords\">\n                <label id=\"password-label\">Password: </label>\n                <label class=\"required\"></label>\n                <label *ngIf=\"adminService.createModelUser.get('Passwords.Password').touched && \n                    adminService.createModelUser.get('Passwords.Password').errors?.required\">This field is required!</label>\n                <label *ngIf=\"adminService.createModelUser.get('Passwords.Password').touched &&\n                    adminService.createModelUser.get('Passwords.Password').hasError('pattern')\">\n                    Password should contain at least 6 symbols including lowercase and uppercase characters without space!</label>\n                <div class=\"text-box-center\">\n                    <input id=\"text-box\" type=\"password\" formControlName=\"Password\" placeholder=\"Enter password\" />\n                </div>\n                <label id=\"confirm-password-label\">Confirm password: </label>\n                <label class=\"required\"></label>\n                <label *ngIf=\"adminService.createModelUser.get('Passwords.ConfirmPassword').touched &&\n                    adminService.createModelUser.get('Passwords.ConfirmPassword').errors?.required\">\n                    This field is required!</label>\n                <label *ngIf=\"adminService.createModelUser.get('Passwords.ConfirmPassword').touched &&\n                    adminService.createModelUser.get('Passwords.ConfirmPassword').errors?.passwordMismatch\">\n                    Passwords does not match!</label>\n                <div class=\"text-box-center\">\n                    <input id=\"text-box\" type=\"password\" formControlName=\"ConfirmPassword\" placeholder=\"Confirm password\" />\n                </div>\n            </div>\n            <label id=\"email-address-label\">Email address: </label>\n            <label class=\"required\"></label>\n            <label *ngIf=\"adminService.createModelUser.get('EmailAddress').touched &&\n                adminService.createModelUser.get('EmailAddress').errors?.required\">This field is required!</label>\n            <label *ngIf=\"adminService.createModelUser.get('EmailAddress').touched &&\n                adminService.createModelUser.get('EmailAddress').hasError('patern')\">Invalid Email address!</label>\n            <div class=\"text-box-center\">\n                <input id=\"text-box\" type=\"email\" formControlName=\"EmailAddress\" placeholder=\"Enter your email address\" />\n            </div>\n            <label id=\"address\">Address: </label>\n            <div class=\"text-box-center\">\n                    <input id=\"text-box\" type=\"text\" formControlName=\"Address\" placeholder=\"Enter your address\" />\n            </div>\n            <label id=\"phone-number\">Phone number: </label>\n            <label class=\"required\"></label>\n            <label *ngIf=\"adminService.createModelUser.get('PhoneNumber').touched &&\n                adminService.createModelUser.get('PhoneNumber').errors?.required\">This field is required!</label>\n            <label *ngIf=\"adminService.createModelUser.get('PhoneNumber').touched &&\n                adminService.createModelUser.get('PhoneNumber').hasError('maxlength') &&\n                adminService.createModelUser.get('PhoneNumber').hasError('minlength')\">\n                Phone number should consists of 10 digits</label>\n            <div class=\"text-box-center\">\n                <input id=\"text-box\" type=\"text\" formControlName=\"PhoneNumber\" placeholder=\"Enter your phone number\" />\n            </div>\n            <label id=\"bank-account-number\">Bank account number: </label>\n            <label class=\"required\"></label>\n            <label *ngIf=\"adminService.createModelUser.get('BankAccountNumber').touched &&\n                adminService.createModelUser.get('BankAccountNumber').errors?.required\">This field is required!</label>\n            <label *ngIf=\"adminService.createModelUser.get('BankAccountNumber').touched &&\n                adminService.createModelUser.get('BankAccountNumber').hasError('pattern')\">Invalid bank account number!</label>\n            <div class=\"text-box-center\">\n                <input id=\"text-box\" type=\"text\" formControlName=\"BankAccountNumber\" placeholder=\"Enter you bank account number\" />\n            </div>\n            <div>\n                <button id=\"sign-up-button\" type=\"submit\" [disabled]=\"adminService.createModelUser.invalid\">Add user</button>\n            </div>\n        </form>\n    </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AdminService } from 'src/app/shared/admin.service';\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.css']\n})\nexport class NavBarComponent implements OnInit {\n\n  constructor(public adminService: AdminService, private router: Router) { }\n\n  ngOnInit(): void {\n    //this.productCategories();\n    console.log(localStorage)\n  }\n\n  productCategories() {\n    this.adminService.getAllProductCategories().subscribe(\n      data => {\n        this.adminService.productCategories = data;\n      }, error => {\n        console.log(error);\n      }\n    )\n  }\n\n  logout() {\n    localStorage.clear();\n    this.router.navigateByUrl('/home')\n  }\n\n}\n","<div class=\"nav-bar\">\n    <ul>\n        <li routerLink=\"/admin/users\" routerLinkActive=\"active\">Users</li>\n        <li routerLink=\"/admin/admins\" routerLinkActive=\"active\">Admins</li>\n        <li routerLink=\"/admin/products\" routerLinkActive=\"active\">Products</li>\n        <li (click)=\"logout()\">Logout</li>\n    </ul>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AdminService } from 'src/app/shared/admin.service';\n\n@Component({\n  selector: 'app-add-admin',\n  templateUrl: './add-admin.component.html',\n  styleUrls: ['./add-admin.component.css']\n})\nexport class AddAdminComponent implements OnInit {\n\n  constructor(public adminService: AdminService) { }\n\n  ngOnInit(): void {\n    this.adminService.createModelAdmin.reset()\n  }\n\n  submit() {\n    this.adminService.addNewAdmin().subscribe(\n      response => {\n        this.adminService.createModelAdmin.reset()\n      }, error => {\n        console.log(error)\n      }\n    )\n  }\n\n}\n","<div class=\"admin-addition\">\n    <div class=\"form-wrapper\">\n        <form [formGroup]=\"adminService.createModelAdmin\" autocomplete=\"off\" (ngSubmit)=\"submit()\">\n            <label class=\"required\"></label>\n            <label id=\"username-label\">Username: </label>\n            <label *ngIf=\"adminService.createModelAdmin.get('Username').touched &&\n                adminService.createModelAdmin.get('Username').errors?.required\">This field is required!</label>\n            <div class=\"text-box-center\">\n                <input id=\"text-box\" type=\"text\" formControlName=\"Username\" placeholder=\"Enter username\" />\n            </div>\n            <div formGroupName=\"Passwords\">\n                <label id=\"password-label\">Password: </label>\n                <label class=\"required\"></label>\n                <label *ngIf=\"adminService.createModelAdmin.get('Passwords.Password').touched && \n                    adminService.createModelAdmin.get('Passwords.Password').errors?.required\">This field is required!</label>\n                <label *ngIf=\"adminService.createModelAdmin.get('Passwords.Password').touched &&\n                    adminService.createModelAdmin.get('Passwords.Password').hasError('pattern')\">\n                    Password should contain at least 6 symbols including lowercase and uppercase characters without space!</label>\n                <div class=\"text-box-center\">\n                    <input id=\"text-box\" type=\"password\" formControlName=\"Password\" placeholder=\"Enter password\" />\n                </div>\n                <label id=\"confirm-password-label\">Confirm password: </label>\n                <label class=\"required\"></label>\n                <label *ngIf=\"adminService.createModelAdmin.get('Passwords.ConfirmPassword').touched &&\n                    adminService.createModelAdmin.get('Passwords.ConfirmPassword').errors?.required\">\n                    This field is required!</label>\n                <label *ngIf=\"adminService.createModelAdmin.get('Passwords.ConfirmPassword').touched &&\n                    adminService.createModelAdmin.get('Passwords.ConfirmPassword').errors?.passwordMismatch\">\n                    Passwords does not match!</label>\n                <div class=\"text-box-center\">\n                    <input id=\"text-box\" type=\"password\" formControlName=\"ConfirmPassword\" placeholder=\"Confirm password\" />\n                </div>\n            </div>\n            <div>\n                <button id=\"add-admin-button\" type=\"submit\" [disabled]=\"adminService.createModelAdmin.invalid\">Add admin</button>\n            </div>\n        </form>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AdminService } from 'src/app/shared/admin.service';\n\n@Component({\n  selector: 'app-show-remove-admin',\n  templateUrl: './show-remove-admin.component.html',\n  styleUrls: ['./show-remove-admin.component.css']\n})\nexport class ShowRemoveAdminComponent implements OnInit {\n\n  constructor(public adminService: AdminService) { }\n\n  ngOnInit(): void {\n    this.showAdmins();\n  }\n\n  showAdmins() {\n    this.adminService.getAllAdmins().subscribe(\n      data => {\n        this.adminService.admins = data;\n      }, error => {\n        console.log(error);\n      }\n    )\n  }\n\n  deleteAdmin(username) {\n    this.adminService.removeAdmin(username).subscribe(\n      data => {\n        for (let i = 0; i < this.adminService.admins.length; i++) {\n          if (this.adminService.admins[i].username === username) {\n            this.adminService.admins.splice(i, 1);\n\n            break;\n          }\n        }\n      }, error => {\n        console.log(error);\n      }\n    )\n  }\n\n}\n","<header>\n    <h1>Admins</h1>\n</header>\n\n<table>\n    <thead>\n        <tr>\n            <th>Username</th>\n            <th>Password</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let admin of adminService.admins\">\n            <td>{{admin.username}}</td>\n            <td>{{admin.password}}</td>\n            <td (click)=\"deleteAdmin(admin.username)\">Delete</td>\n        </tr>\n    </tbody>\n</table>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AdminService } from 'src/app/shared/admin.service';\n\n@Component({\n  selector: 'app-show-remove-product',\n  templateUrl: './show-remove-product.component.html',\n  styleUrls: ['./show-remove-product.component.css']\n})\nexport class ShowRemoveProductComponent implements OnInit {\n\n  constructor(public adminService: AdminService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.showProducts()\n  }\n\n  showProducts() {\n    this.adminService.getAllProducts().subscribe(\n      data => {\n        this.adminService.allProducts = data\n      }, error => {\n        console.log(error)\n      }\n    )\n  }\n\n  editProduct(productID) {\n    this.router.navigateByUrl('admin/edit/' + productID)\n  }\n\n  deleteProduct(productName) {\n    this.adminService.removeProduct(productName).subscribe(\n      data => {\n        for (let i = 0; i < this.adminService.allProducts.length; i++) {\n          if (this.adminService.allProducts[i].name === productName) {\n            this.adminService.allProducts.splice(i, 1)\n\n            break;\n          }\n        }\n      }, error => {\n        console.log(error)\n      }\n    )\n  }\n\n}\n","<header>\n    <h1>Products</h1>\n</header>\n\n<table>\n    <thead>\n        <tr>\n            <th>ID</th>\n            <th>Name</th>\n            <th>Description</th>\n            <th>Price</th>\n            <th>Quantity</th>\n            <th>Status</th>\n            <th>Category</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let product of adminService.allProducts\">\n            <td>{{product.id}}</td>\n            <td>{{product.name}}</td>\n            <td>{{product.description}}</td>\n            <td>{{product.price}}</td>\n            <td>{{product.quantity}}</td>\n            <td>{{product.status}}</td>\n            <td>{{product.category}}</td>\n            <td (click)=\"editProduct(product.id)\">Edit</td>\n            <td (click)=\"deleteProduct(product.name)\">Delete</td>\n        </tr>\n    </tbody>\n</table>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuard } from './auth/auth.guard';\nimport { AddAdminComponent } from './shop/admin/add-admin/add-admin.component';\nimport { AddUserComponent } from './shop/admin/add-user/add-user.component';\nimport { AdminComponent } from './shop/admin/admin.component';\nimport { CreateProductComponent } from './shop/admin/create-product/create-product.component';\nimport { EditProductComponent } from './shop/admin/edit-product/edit-product.component';\nimport { ShowRemoveAdminComponent } from './shop/admin/show-remove-admin/show-remove-admin.component';\nimport { ShowRemoveProductComponent } from './shop/admin/show-remove-product/show-remove-product.component';\nimport { ShowRemoveUserComponent } from './shop/admin/show-remove-user/show-remove-user.component';\nimport { ProductsByCategoriesComponent } from './shop/products-by-categories/products-by-categories.component';\nimport { ShopComponent } from './shop/shop.component';\nimport { CartComponent } from './user/cart/cart.component';\nimport { LoginComponent } from './user/login/login.component';\nimport { RegistrationComponent } from './user/registration/registration.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/home', pathMatch: 'full' },\n  { path: 'home', component: ShopComponent },\n  { path: 'home/:category', component: ProductsByCategoriesComponent },\n  { path: 'user/registration', component: RegistrationComponent },\n  { path: 'user/login', component: LoginComponent },\n  { path: 'user/cart', component: CartComponent, canActivate: [AuthGuard] },\n  { path: 'admin', component: AdminComponent },\n  { path: 'admin/users', component: ShowRemoveUserComponent },\n  { path: 'admin/admins', component: ShowRemoveAdminComponent },\n  { path: 'admin/add-user', component: AddUserComponent },\n  { path: 'admin/add-admin', component: AddAdminComponent },\n  { path: 'admin/products', component: ShowRemoveProductComponent },\n  { path: 'admin/create-product', component: CreateProductComponent },\n  { path: 'admin/edit/:id', component: EditProductComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}